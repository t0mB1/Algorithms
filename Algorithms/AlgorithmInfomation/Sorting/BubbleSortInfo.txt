Bubble sort operates by repeatedly swapping adjacent items if they are in the wrong order.
Best: O(n)
Worst: O(n²)
Average: O(n²)
C#
using System;

class Algorithm
{
    static int[] BubbleSort(int searchItem, int[] array)
    {
        int n = array.Length;
        for(int i = 0; i < n - 1; i++)
        {
            for(int j = 0; j < n - 1; j++)
            {
                if(array[j  > array[j + 1])
                {
                    int temp = array[j];
                    array[j] = array[j + 1]
                    array[j + 1] = array[j]
                }
            }
        }
        return array;
    }
}

Java
class Algorithm
{
        static int[] BubbleSort(int[] array)
        {
                int n = array.length;
                for(int i = 0; i < n - 1; i++)
                        for(int j = 0; j < n - 1; j++)
                        if(array[j] > array[j + 1]{
                                int temp = array[j];
                                array[j] = array[j + 1]
                                array[j + 1] = array[j]
                        }
                return array;
        }
}

Python
def BubbleSort(array):
     n = len(array)
         for i in range()
             for j in range()
                  if array[j] > array[j + 1]: 
                      temp = array[j]
                      array[j] = array[j+1]
                      array[j+1] = temp
     return array
